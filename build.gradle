buildscript {
    repositories {
        maven { url = "https://maven.minecraftforge.net/" }
		maven { url = "https://plugins.gradle.org/m2/" }
        jcenter()
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.4.0'
        classpath "com.modrinth.minotaur:Minotaur:2.+"
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'java'
apply plugin: 'com.matthewprenger.cursegradle'
apply from: "https://raw.githubusercontent.com/SizableShrimp/Forge-Class-Remapper/main/classremapper.gradle"
apply plugin: "com.modrinth.minotaur"
import com.modrinth.minotaur.dependencies.ModDependency

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url 'https://www.cursemaven.com' }
}

configurations {
    library
    shade
    implementation.extendsFrom library
    shade.extendsFrom library
}

minecraft {
    mappings channel: 'official', version: '1.18.2'
    runs {
        client {
            workingDirectory project.file('run')
            mods {
                logbegone {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            mods {
                logbegone {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')
            args '--mod', 'logbegone', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                logbegone {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

minecraft.runs.all {
    lazyToken('minecraft_classpath') {
        configurations.library.copyRecursive().resolve().collect { it.absolutePath }.join(File.pathSeparator)
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.1.19'
  	compileOnly "org.apache.logging.log4j:log4j-core:2.17.+"
  	compileOnly 'org.jetbrains:annotations:22.+'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "Log Begone",
                "Specification-Vendor"    : "AzureDoom",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "AzureDoom",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

if (file('key.properties').exists()) {
    curseforge {
    	def curseProp = new Properties()
    	File secretPropsFile = file("key.properties")
    	curseProp.load(secretPropsFile.newInputStream())
    	project {
        	apiKey = curseProp.getProperty('curseKey')
        	id = "623560"
        	releaseType = "release"
        	changelogType = 'text'
        	changelog = file('CHANGELOG.txt')
			addGameVersion("1.18.2")
			addGameVersion("1.18.1")
			addGameVersion("1.18")
			addGameVersion("Forge")
			addGameVersion("Java 17")
    	}
    	options {
        	forgeGradleIntegration = false
    	}
    }
}

if (file('key.properties').exists()) {
	modrinth {
		def modrinthProp = new Properties()
		File secretPropsFile = file("key.properties")
		modrinthProp.load(secretPropsFile.newInputStream())
		
		token = modrinthProp.getProperty('modrinthKey')
		projectId = '9ON3zv6e' 
		versionNumber = project.mod_version 
		versionName = 'Forge 1.18.2'
		uploadFile = jar 
		changelog = rootProject.file("changelog.txt").text
		gameVersions = ['1.18.2']
		loaders = ['forge']
	}
}
